// Generated by https://quicktype.io

export enum CalendarTypes {
    UPDATE_CALENDARS = 'UpdateCalendars',
    SELECTED_CALENDAR_ELEMENTS = 'SelectedCalendarElements',
}

export type CalendarDispatch = {
    type: CalendarTypes
}
export type CalendarElementsDispatch = {
    type: CalendarTypes
}

export interface ActionCalendar {
    type: CalendarTypes
    payload: CalendarsList | any
}

export type CalendarsList = Calendar[]

export interface Calendar {
    kind: Kind
    etag: string
    id: string
    summary: string
    location?: string
    timeZone: TimeZone
    colorId: string
    backgroundColor: string
    foregroundColor: ForegroundColor
    accessRole: string
    defaultReminders: DefaultReminder[]
    conferenceProperties: ConferenceProperties
    description?: string
    selected?: boolean
    summaryOverride?: string
    primary?: boolean
}

export interface ConferenceProperties {
    allowedConferenceSolutionTypes: AllowedConferenceSolutionType[]
}

export enum AllowedConferenceSolutionType {
    HangoutsMeet = 'hangoutsMeet',
}

export interface DefaultReminder {
    method: string
    minutes: number
}

export enum ForegroundColor {
    Ffffff = '#ffffff',
    The000000 = '#000000',
}

export enum Kind {
    CalendarCalendarListEntry = 'calendar#calendarListEntry',
}

export enum TimeZone {
    AmericaArgentinaBuenosAires = 'America/Argentina/Buenos_Aires',
    UTC = 'UTC',
}

// Generated by https://quicktype.io
export type CalendarElements = CalendarElement[]

export interface CalendarElement {
    kind: string
    etag: string
    id: string
    status: string
    htmlLink: string
    created: string
    updated: string
    summary: string
    creator: Creator
    organizer: Creator
    start: Time
    end: Time
    recurringEventId: string
    originalStartTime: Time
    iCalUID: string
    sequence: number
    reminders: Reminders
    eventType: string
}

export interface Creator {
    email: string
    self: boolean
}

export interface Time {
    dateTime: string
    timeZone: string
}

export interface Reminders {
    useDefault: boolean
    overrides: Override[]
}

export interface Override {
    method: string
    minutes: number
}
